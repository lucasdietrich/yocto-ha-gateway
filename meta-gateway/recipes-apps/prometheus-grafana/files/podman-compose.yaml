version: "3"

services:
  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /var/lib/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=365d'
      - '--web.external-url=/prometheus/'
      - '--web.route-prefix=/prometheus/'
    #network_mode: host
    networks:
      - monitor_net
    ports:
      - "9090:9090"
    restart: always
    depends_on:
      - node_exporter

  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=ha
      - GF_SECURITY_ADMIN_PASSWORD=ha
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
    volumes:
      - /var/lib/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    #network_mode: host
    networks:
      - monitor_net
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - prometheus

  node_exporter:
    image: docker.io/prom/node-exporter:latest
    container_name: node_exporter
    command:
#      - '--web.telemetry-path="/node_exporter/metrics"'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.systemd'
      - '--collector.processes'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    #network_mode: host
    networks:
      - monitor_net
    ports:
      - "9100:9100"
    restart: always
    pid: host

networks:
  monitor_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.89.50.0/24
          gateway: 10.89.50.1